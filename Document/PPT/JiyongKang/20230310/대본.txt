3. 일단 RFSoC의 simple한 diagram은 다음과 같습니다. 기존의 Zynq MPSoC에 RF IP가 추가된 것과 동일합니다. Zybo와 같이 Zynq 7000 시리즈의 CPU는 Cortex A9라는 APU 만이 있는 반면에 Zynq RFSoC의 경우 Cortex A53 APU가 포함되어 있고 Cortex R5 RPU가 포함되어 있습니다. A53 CPU의 경우 4 core CPU이고 R5 RPU의 경우 dual core 입니다. 이때 RPU는 Tightly Coupled Memory라는 memory가 추가로 달려 있어 real time task를 처리하는 경우 더 유리할 것으로 생각이 됩니다.

4. 일단 RFDC 의 전체적인 구조는 다음과 같습니다. 여기서 DUC, DDC는 각각 digital up convertor, digital down convertor에 해당이 되고 각각 데이터를 interpolation, 아니면 decimation하는 것을 수행합니다. interpolation은 데이터 수가 부족하지만 중간에 데이터를 삽입해서 sampling rate를 높이기 위해 사용하고, decimation은 입력 데이터가 너무 많으니 일부분의 데이터만을 sampling 하는 것입니다.

5. DAC 파트는 다음과 같습니다. PLL이 달려 있어서 아래 표와 같이 reference frequency를 이용해서  frequency를 생성할 수도 있고 그냥 직접 frequency를 입력할 수 도 있습니다. 그림에 나타난 것 처럼 mixer를 이용해 mixing을 할 수도 있고 bypass할 수 도 있습니다. FPGA 내부에 filter가 없기 때문에 filter가 있는 보드를 구입하거나 직접 제작해야 할 것으로 보입니다. Sampling rate은 최대 6.55GSPS입니다.

6. ADC의 경우 DAC와 유사하고 sampling rate은 최대 4GSPS입니다.

7. 이제 RFSoC의 output은 다음과 같이 나타나는데요, I,Q는 각각 IQ mixing에서의 그 I,Q에 해당합니다. 각각의 I,Q는 AXI Stream을 통해 전송이 가능합니다.

8. 먼저 IQ mixing을 이해하기 위해 간단히 다음과 같은 경우를 생각해보면 0,1을 그냥 sin파에 곱해주거나, 아니면 해당 0,1을 phase 0, pi에 대응을 시켜서 다음과 같이 전송할 수 있다고 생각할 수 있습니다. 왜 곱하냐 한다면 DC성분은 직진성이 없기 때문에 전자기파에 데이터를 담아서 데이터를 전송하기 위해서 입니다. Cos, sin파가 직교하니 서로 비교할수 있다는 것을 생각해보면 아래 그림 처럼 더 낮은 주파수에서 많은 데이터를 보낼 수 있는 경우를 생각할 수 있습니다.

9. 이제 방금 말한 부분을 좌표 평면에 대응을 시키면 각각의 축이 I,Q가 됩니다.

10. 이걸 조금더 발전 시키면 다음과 같은 통신 또한 가능할 겁니다.

11. 이제 RFDC에 data는 다음과 같은 AXI stream interface를 통해 보냅니다. 일단 AXI의 경우 hand shake방식으로 데이터를 전송을 하는데 AXI stream은 handshake을 제거하고 더 단순하게 데이터를 전송합니다. 256bit의 data에 각각의 시간에 대응되는 I,Q데이터를 입력을 해서 전송을 합니다.

12. RFSoC의 CPU structure는 다음과 같습니다.

16. 이제 왜 RFSoC에 OS가 필요한가인데요, 먼저 feedback을 이용하는 경우를 가정을 해볼 수 있습니다. ADC에서 측정된 값을 주파수를 변경하는 것으로 생각할 수 있을 겁니다. 이런 경우에는 ADC의 데이터가 입력이 완료되기 전까지 CPU가 halt될 수 밖에 없습니다. 이럴 경우 다른 DAC에 output을 출력해야 하는데 아주 비효율적으로 시스템이 돌아가는 것 뿐만 아니라 output timing을 못맞출수도 있습니다. 그래서 다음과 같이 context switching을 수행해야 할 겁니다. 사실 교수님께서 deterministic한 output만을 만들 것이라 하셔서 OS가 필요하지 않을지도 모르겠습니다. Artiq 경우 PID control을 pl측에서 처리를 하긴 합니다.

18. 